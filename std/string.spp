@public
cls Str { }


sup Str {
    @no_impl fun upper(&self) -> Str { }
    @no_impl fun lower(&self) -> Str { }
}


sup Str ext std::ops::Eq[Rhs=Str] {
    @no_impl fun eq(&self, that: Str) -> Bool { }
}


fun test_other_mod_constant() -> std::Void {
    let x = testing::test_loop_analysis()
    let y = testing::constant_1.upper()

    # why does the function work, but getting a global constant from the "testing" namespace doesnt?
}
