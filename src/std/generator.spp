use std::boolean::Bool
use std::option::None
use std::void::Void


@public
cls Gen[Yield, Send=Void, cmp once: Bool = false] { }
sup [Yield, Send, cmp once: Bool] Gen[Yield, Send, once] {
    @virtual_method
    @compiler_builtin
    cor resume(&mut self, value: Send) -> Gen[Yield] { }
}


@public
cls GenOpt[Yield, Send=Void, cmp once: Bool = false] { }
sup [Yield, Send, cmp once: Bool] GenOpt[Yield, Send, once] ext Gen[Yield, Send, once] {
    @virtual_method
    @compiler_builtin
    cor resume(&mut self, value: Send) -> Gen[Yield] { }
}


@public
cls GenRes[Yield, Err, Send=Void, cmp once: Bool = false] { }
sup [Yield, Err, Send, cmp once: Bool] GenRes[Yield, Err, Send, once] ext Gen[Yield, Send, once] {
    @virtual_method
    @compiler_builtin
    cor resume(&mut self, value: Send) -> Gen[Yield] { }
}


@private
cls Generated[Yield, cmp once: Bool] { }


@private
cls GeneratedOpt[Yield, cmp once: Bool] { }


@private
cls GeneratedRes[Yield, Err, cmp once: Bool] { }
