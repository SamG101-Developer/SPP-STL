use std::generator::Gen
use std::number::usize::USize
use std::ops::deref::DerefMut
use std::ops::deref::DerefRef
use std::shadow::Shadow


cls Shared[T] {
    @private
    shared_counter: USize

    @private
    shadow_counter: USize
}


sup [T] Shared[T] {
    @public
    @compiler_builtin
    fun shadow(&self) -> Shadow[T] { }

    @public
    fun shares(&self) -> USize {
        ret self.shared_counter
    }

    @public
    fun shadows(&self) -> USize {
        ret self.shadow_counter
    }
}


sup [T] Shared[T] ext DerefRef[T] {
    @compiler_builtin
    cor deref_ref(&self) -> GenOnce[&T] { }
}


sup [T] Shared[T] ext DerefMut[T] {
    @compiler_builtin
    cor deref_mut(&mut self) -> GenOnce[&mut T] { }
}
