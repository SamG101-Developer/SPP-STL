cls Shared[T] {
    shared_counter: number::U64
    shadow_counter: number::U64
}

sup [T] Shared[T] {
    @public
    @compiler_builtin
    fun new() -> Shared[T] { }

    @public
    @compiler_builtin
    fun shadow(&self) -> shadow::Shadow[T] { }
}

sup [T] Shared[T] ext ops::deref_ref::DerefRef[T] {
    @public
    @compiler_builtin
    cor deref_ref(&self) -> generator::Gen[&T] { }
}

sup [T] Shared[T] ext ops::deref_mut::DerefMut[T] {
    @public
    @compiler_builtin
    cor deref_mut(&mut self) -> generator::Gen[&mut T] { }
}
