use std::generator::GenOnce
use std::iterator::IndexMut
use std::iterator::IndexRef
use std::iterator::Iterator
use std::iterator::IterMov
use std::iterator::IterMut
use std::iterator::IterRef
use std::number::USize


cls View[T] { }


sup [T] View[T] {
    @public
    @abstract_method
    fun length(&self) -> USize { }
}


sup [T] View[T] ext IterMov[T] {
    @compiler_builtin
    cor iter_mov(self) -> Iterator[T] { }
}


sup [T] View[T] ext IterMut[T] {
    @compiler_builtin
    cor iter_mut(&mut self) -> Iterator[&mut T] { }
}


sup [T] View[T] ext IterRef[T] {
    @compiler_builtin
    cor iter_ref(&self) -> Iterator[&T] { }
}


sup [T] View[T] ext IndexMut[T, USize] {
    @compiler_builtin
    cor index_mut(&mut self, index: USize) -> GenOnce[&mut T] { }
}


sup [T] View[T] ext IndexRef[T, USize] {
    @compiler_builtin
    cor index_ref(&self, index: USize) -> GenOnce[&T] { }
}
