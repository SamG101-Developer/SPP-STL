@public
cls IterMov[T] { }


@public
cls IterMut[T] { }


@public
cls IterRef[T] { }


sup [T] IterMov[T] {
    @virtual_method
    cor iter_mov(self) -> Gen[T] { }
}


sup [T] IterMut[T] {
    @virtual_method
    cor iter_mut(&mut self) -> Gen[&mut T] { }
}


sup [T] IterRef[T] {
    @virtual_method
    cor iter_ref(&self) -> Gen[&T] { }
}


# cls Iterator[T] { }
#
#
# sup [T] Iterator[T] {
#     fun filter(self, predicate: FunRef[(T), Bool]) -> Iterator[T] { }
#
#     fun map[U](self, mapper: FunRef[(T), U]) -> Iterator[U] { }
# }
#
# sup [T] Iterator[T] ext Gen[T] { }
